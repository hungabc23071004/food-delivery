// ƒê·∫∑t d√≤ng n√†y ƒë·ªÉ fix l·ªói "global is not defined" trong Vite
window.global = window;

import SockJS from "sockjs-client";
import { Client } from "@stomp/stompjs";

let stompClient = null;

/**
 * K·∫øt n·ªëi WebSocket ƒë·∫øn backend
 * @param {string} shopId - id c·ªßa shop ƒë·ªÉ bi·∫øt nh·∫≠n th√¥ng b√°o cho ai
 * @param {(msg: any) => void} onMessage - callback khi nh·∫≠n ƒë∆∞·ª£c tin nh·∫Øn
 */
export function connectNotificationWS(shopId, onMessage) {
  // üß© 1. T·∫°o k·∫øt n·ªëi WebSocket ƒë·∫øn backend
  const socket = new SockJS("http://localhost:8080/food/ws"); // ƒë·ªïi port n·∫øu backend kh√°c
  stompClient = new Client({
    webSocketFactory: () => socket,
    reconnectDelay: 5000, // t·ª± k·∫øt n·ªëi l·∫°i n·∫øu m·∫•t
  });

  // üß© 2. Khi k·∫øt n·ªëi th√†nh c√¥ng
  stompClient.onConnect = () => {
    console.log("‚úÖ ƒê√£ k·∫øt n·ªëi WebSocket");
    const topic = `/topic/notifications/${shopId}`;
    console.log("üì° ƒêƒÉng k√Ω nh·∫≠n t·ª´:", topic);

    // üß© 3. ƒêƒÉng k√Ω nh·∫≠n th√¥ng b√°o
    stompClient.subscribe(topic, (message) => {
      const data = JSON.parse(message.body);
      console.log("üì® Nh·∫≠n ƒë∆∞·ª£c:", data);
      onMessage(data);
    });
  };

  // üß© 4. Khi c√≥ l·ªói
  stompClient.onWebSocketError = (err) => {
    console.error("‚ùå L·ªói WebSocket:", err);
  };

  stompClient.onDisconnect = () => {
    console.log("üîå WebSocket ng·∫Øt k·∫øt n·ªëi");
  };

  // üß© 5. K√≠ch ho·∫°t k·∫øt n·ªëi
  stompClient.activate();
}

/**
 * Ng·∫Øt k·∫øt n·ªëi WebSocket
 */
export function disconnectNotificationWS() {
  if (stompClient) {
    stompClient.deactivate();
    stompClient = null;
    console.log("‚ùé Ng·∫Øt k·∫øt n·ªëi WebSocket");
  }
}
